< 제어문 >
1. 조건문
   - if(boolean형)
   - switch(정수형+String)

2. 반복문
   - while(boolean형){}
   - do{} while(boolean형);
   - for(초기식;조건식;증감식){}

< 예약어 >
1. break
   - loop, switch
   - 첫번째 블럭 '나간다'
   - labled break

2. continue
   - loop
   - 조건이 맞으면 '건너뛴다'
   - labled continue

3. return
   - 생성자 or 메소드 '어디서나' 나올 수 있음
   - 호출한 '곳'이나 '놈'으로 '되돌린다'
   - 메소드의 리턴타입이 void가 아니면 생략 불가

< 연산자(Operator) >
1. (데이터) 연산하게 하는 '기호'

2. 종류
	1) 산술 ex) +, -, *, /, %
	2) 증감 ex) ++,  --
	3) 대입 ex) =
	4) 산술대입 ex) +=, -=, *=, /=, %=
	5) 비트 ex) &, |, ~, 시프트( <<, >>, >>> )
	6) 비교 ex) ==, !=, <, <=, >, >=
	7) 논리 ex) &, &&, |, ||
	8) 논리대입  ex) &=, |=
	9) 조건 ex) A? B : C
	10) instanceof ex) 객체 instanceof 클래스

배열(Array)
같은 타입의 데이터 '저장소'로써, 생성될 때 그 크기가 고정되는 '객체' -> 객체는 어디에 만들어지냐 메모리에 만들어짐 (휘발성)
(1) 선언
    type 배열변수[];
    (예 : int is[], String strs[], ..)

(2) 생성
    배열변 = new type[크기];

(3) 초기화
    배열변수[인덱스] = 데이터;

(4) 선언 및 생성
    type 배열변수[] = new type[크기];

(5) 선언 생성 및 초기화
    String strs[] = {"봄", "여름", "가을", "겨울"};

    #참고) 배열크기속성: length
    #주의) 선언과 생성초기화는 분리가 불가능함

(6) 배열방의 default 초기값(by JVM)
    - boolean(false), 정수(0, 0L), 실수(0.0f, 0.0)
    -null

(7) 형변환
    자동형변환이 가능한 데이터라면 변환되서 저장됨
    ( 예 : b, s, c, i, (int)lo, (int)f, (int)d )
    class C
    {
    	byte b = 10;
    	short s = 20;
    	char c = 'A';
    	int i = 30;
    	long lo = 40L;
    	float f = 50.0f;
    	double d = 60.0;

        C(){
    		int is[] = {b, s, c, i, (int)lo, (int)f, (int)d};
    		out(is); //호출시 넘겨줌
    	}
    	void out(int[] is){ //정의
    		for(int i=0; i<is.length; i++){
    			System.out.println("is["+i+"]: " +is[i]);
    		}
    	}
    	public static void main(String[] args) {
    		new C();
    	}
    }

(8) 2차원 배열
    1차원 배열을 데이터(element)로 갖는 배열
    class D {
      int is[] = {1, 2};
      int iss[][] = {is, {30, 40, 50}, {600}}
      void out() {
        System.out.println("iss[0][0]: " + iss[0][0]); -> 1
        System.out.println("iss[0][0]: " + iss[0][1]); -> 2
        System.out.println("iss[0][0]: " + iss[1][0]); -> 30
        System.out.println("iss[0][0]: " + iss[1][1]); -> 40
        }
      public static void main(String[] args) {
         new D().out();
      }
    }

(9) N차원배열
    N-1차원 배열을 데이터(element)로 갖는 배열


Collection( Data structure / 가변배열 )
# 같은 타입의 '참조형'데이터 '저장소'로써 그 크기가 변할 수 있는 '객체'

(1) 종류
    - java.util.Collection
       |               |
      List            Set
        |              |
 Vector, ArrayList... TreeSet
    - java.util.Map
            |
      Hashmap, hashtable,..

(2) 특성
   1) List
      - 순서를 보전
      - 중복된 데이터를 허용
      - day07/A.java
   2) Set
      - TreeSet
      - 순서를 보전하지 않음
      - 집합이 있어서 중복된 데이터는 1개만 출력됨
   3) Map


